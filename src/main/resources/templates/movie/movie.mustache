<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Zootopedia</title>
    <script src="https://kit.fontawesome.com/c58241218c.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/css/movie.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700;800&display=swap" rel="stylesheet">
</head>


{{>layouts/header}}

<!------ section ------>
<section id="section">
    <div id="movie_img_title">
        <img id="movie_img" src="{{movieInfo.poster}}">

        <div id="movie_title">
            <h2>{{movieInfo.movieNm}}</h2>
            <h4><i>{{openYear}} / {{genres}} / {{movieInfo.nationAlt}}</i></h4>

            {{>movie/rating}}

        </div>

        <div id="movie_user_want">
            {{>movie/wanting}}

            {{>movie/watching}}
        </div>
    </div>

    <div id="movie_information">
        <h4>영화 정보</h4>
        <p>{{movieInfo.movieNm}}</p>
        <p>{{openYear}} | {{genres}} | {{movieInfo.nationAlt}}</p>
        <div id="information_div">정보들</div>
    </div>

    <div id="movie_evaluate">
        <h4>코멘트</h4>
        <div id="comment_button" action="/">
            <textarea name="comment" rows="10" cols="50"></textarea>
            <input type="button" value="완료">
        </div>
        <div class="movie_evaluate_user">
            <p id="comment_user_name">{{#user}}{{nickname}}{{/user}}</p>
            <p id="comment_user"></p>
        </div>
    </div>
    <script src="/js/movie.js"></script>

    <script>
        window.onload = function () {
            fetch("/api/get/movie/rating/movieCd=" + {{movieInfo.movieCd}})
                    .then(function(response){
                        response.json().then(function (data){
                            let star = document.querySelectorAll('input');
                            let c_value = document.querySelector('#current_value');
                            if(data.rating != null){
                                for (let i = 0; i < star.length; i++) {
                                    star[i].addEventListener('click', function() {

                                    });

                                    if(star[i].getAttribute('value') == data.rating) {
                                        star[i].setAttribute('checked', true);
                                    }
                                }
                            }
                        })
                    }).catch(function (err){
                console.log(err)
            })
        }

        const clickReview = () => {

            let comment = document.getElementById("input_comment_textarea").value;
            let date = new Date();

            let year = date.getFullYear();
            let month = date.getMonth();
            let day = date.getDate();
            let hour = date.getHours();
            let min = date.getMinutes();
            let sec = date.getSeconds();

            if (month < 10) {
                month = String(month).padStart(2, '0');
            }
            if (day < 10) {
                day = String(day).padStart(2, '0');
            }
            if (hour < 10) {
                hour = String(hour).padStart(2, '0');
            }
            if (min < 10) {
                min = String(min).padStart(2, '0');
            }
            if (sec < 10) {
                sec = String(sec).padStart(2, '0');
            }

            let onDay = `${year}.${month}.${day} ${hour}.${min}.${sec}`;

            const commentData = {
                key: ,
                commentId: ,
                comment: comment,
                nickname: ,
                createDate: onDay,
            }

            fetch('api/movie/save/' + {{movieInfo.movieCd}}, {
                method: "post",
                body: JSON.stringify(commentData),
                headers: { 'Content-Type': 'application/json' }
            })
                    .then((response) => response.json())
                    .then(response => {
                        console.log("Post review Connected");
                        console.log(response);
                    })
                    .catch((error) => {
                        console.error('실패 ', error)
                    })

        }

        const clickDeleteReview = () => {

            const deleteData = {
                commentId: ,
                comment: ,
                movieCd:
            }

            fetch('api/movie/delete/' + {{movieInfo.movieCd}}, {
                method: "post",
                body: JSON.stringify(deleteData),
                headers: { 'Content-Type': 'application/json' }
            })
                    .then((response) => response.json())
                    .then(response => {
                        console.log("Post delete review Connected");
                        console.log(response);
                    })
                    .catch((error) => {
                        console.error('실패 ', error)
                    })
        }
    </script>
</section>

{{>layouts/footer}}