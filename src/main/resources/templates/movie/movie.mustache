<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Zootopedia</title>
    <script src="https://kit.fontawesome.com/c58241218c.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/css/movie.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700;800&display=swap" rel="stylesheet">
</head>


{{>layouts/header}}

<!------ section ------>
<section id="section">
    <div id="movie_img_title">
        <img id="movie_img" src="{{movieInfo.poster}}">

        <div id="movie_title">
            <h2>{{movieInfo.movieNm}}</h2>
            <h4><i>{{openYear}} / {{genres}} / {{movieInfo.nationAlt}}</i></h4>

            {{>movie/rating}}

        </div>

        <div id="movie_user_want">
            {{>movie/wanting}}

            {{>movie/watching}}
        </div>
    </div>

    <div id="movie_information">
        <h4>영화 정보</h4>
        <p>{{movieInfo.movieNm}}</p>
        <p>{{openYear}} | {{genres}} | {{movieInfo.nationAlt}}</p>
    </div>

    <div id="movie_evaluate">
            <div id="comment_button">
            <textarea id="input_comment_textarea" name="comment" rows="10" cols="50"></textarea>
               <input type="button" value="완료" onclick="clickReview();">
            </div>
        <div id="commentBox">
            {{^comments}}{{/comments}}
            {{#comments}}
                <div class="all_comment">
                    <div class="movie_evaluate_user">
                        <p id="comment_user_name">{{user.nickname}}</p>
                        <p id="comment_user">
                            {{#isWriter}}
                                <button id="comment_delete_button" onclick="commentDeleteEvent(this)">삭제</button>
                            {{/isWriter}}
                        </p>
                    </div>
                    <div class="movie_comments">
                        <p>{{comment}}</p>
                    </div>
                </div>
            {{/comments}}
        </div>
    </div>

    <script src="/js/movie.js"></script>

    <script>
        window.onload = function () {
            fetch("/api/get/movie/rating/movieCd=" + {{movieInfo.movieCd}})
                    .then(function(response){
                        response.json().then(function (data){
                            let star = document.querySelectorAll('input');
                            let c_value = document.querySelector('#current_value');
                            if(data.rating != null){
                                for (let i = 0; i < star.length; i++) {
                                    star[i].addEventListener('click', function() {

                                    });

                                    if(star[i].getAttribute('value') == data.rating) {
                                        star[i].setAttribute('checked', true);
                                    }
                                }
                            }
                        })
                    }).catch(function (err){
                console.log(err)
            })

            wanting();
            watching();

        }

        const clickReview = () => {

            let comment = document.getElementById("input_comment_textarea").value;



            const commentData = {
                commentId: null,
                comment: comment
            }

            fetch('/api/movie/save/' + {{movieInfo.movieCd}}, {
                method: "post",
                body: JSON.stringify(commentData),
                headers: { 'Content-Type': 'application/json' }
            })
                    .then((response) => response.json())
                    .then(response => {
                        console.log("Post review Connected");
                        console.log(response);
                    })
                    .catch((error) => {
                        console.error('실패 ', error)
                    })
            window.location.reload();
        }

        const clickDeleteReview = () => {

            const deleteData = {
                movieCd:{{movieInfo.movieCd}}
            }

            fetch('api/movie/delete/' + {{movieInfo.movieCd}}, {
                method: "post",
                body: JSON.stringify(deleteData),
                headers: { 'Content-Type': 'application/json' }
            })
                    .then((response) => response.json())
                    .then(response => {
                        console.log("Post delete review Connected");
                        console.log(response);
                    })
                    .catch((error) => {
                        console.error('실패 ', error)
                    })
        }

        function commentDeleteEvent(target) {

            fetch('api/movie/delete/' + target.value, {
                method: 'DELETE'
            })
                    .then(response => response.json())
                    .then(function (json) {
                        console.log(json);
                    })
                    .catch((err) => {
                        console.log(err);
                    })
        }

        let comment_update_button = document.createElement('button');
        let comment_delete_button = document.createElement('button');
        let comment_like_button = document.createElement('button');

        comment_update_button.setAttribute('id', 'comment_update_button');
        comment_update_button.setAttribute('onclick', 'commentUpdateEvent();');

        comment_delete_button.setAttribute('id', 'comment_delete_button');
        comment_delete_button.setAttribute('onclick', 'commentDeleteEvent();');

        comment_like_button.setAttribute('id', 'comment_like_button');
        comment_like_button.setAttribute('onclick', 'commentLikeEvent();');

        function viewCommentUnLogin() {
            fetch('/api/movie/show/' + {{movieInfo.movieCd}})
                    .then((response) => response.json())
                    .then(response => {
                        console.log("show comment Connected");
                        console.log(response);

                        for (let i = 0; i < response.length; i++) {

                            let comment = response[i].comment;
                            let userName = response[i].user.nickname;

                            let commentBox = document.getElementById('commentBox');

                            let new_divTag_all_comment = document.createElement('div');
                            new_divTag_all_comment.setAttribute('class', 'all_comment');

                            let movie_evaluate_user = document.createElement('div');
                            movie_evaluate_user.setAttribute('class', 'movie_evaluate_user');

                            let comment_user_name = document.createElement('p');
                            comment_user_name.setAttribute('class', 'comment_user_name');
                            comment_user_name.append(userName);

                            let comment_user = document.createElement('p');
                            comment_user.setAttribute('class', 'comment_user');

                            let movie_comments = document.createElement('div');
                            movie_comments.setAttribute('class', 'movie_comments');

                            let commnetMus = document.createElement('p');
                            commnetMus.append(comment);

                            movie_evaluate_user.append(comment_user_name);
                            movie_evaluate_user.append(comment_user);
                            movie_comments.append(commnetMus);

                            new_divTag_all_comment.append(movie_evaluate_user);
                            new_divTag_all_comment.append(movie_comments);

                            commentBox.appendChild(new_divTag_all_comment);
                        }
                    })
                    .catch((error) => {
                        console.error('실패 ', error)
                    })
        }
        viewCommentUnLogin()

        /** 보고싶어요 버튼 fetch */
        function wanting () {
            fetch('/api/get/wanting/movieCd=' + {{movieInfo.movieCd}})
                    .then((response) => response.json())
                    .then(response => {
                        console.log("wanting button Connected");
                        console.log(response);

                        if (response.error === 'Bad Request'){
                            const myButton_w = document.querySelector('.fa-laptop');

                            myButton_w.classList.replace('fa-check', 'fa-laptop');
                            return;
                        }

                        button_check = response;

                        const myButton = document.querySelector('.fa-folder-closed');

                        if (button_check == false) {
                            myButton.classList.replace('fa-check', 'fa-folder-closed');
                        } else {
                            myButton.classList.replace('fa-folder-closed', 'fa-check');
                        }
                    })
                    .catch((error) => {
                        console.error('실패 ', error)
                    })
        }

        function watching() {
            fetch('/api/get/watching/movieCd=' + {{movieInfo.movieCd}})
                    .then((response) => response.json())
                    .then(response => {
                        console.log("watching button Connected");
                        console.log(response);

                        if (response.error === 'Bad Request'){
                            const myButton_w = document.querySelector('.fa-laptop');

                            myButton_w.classList.replace('fa-check', 'fa-laptop');
                            return;
                        }

                        let button_check_w = response;

                        const myButton_w = document.querySelector('.fa-laptop');

                            if (button_check_w == false) {
                                myButton_w.classList.replace('fa-check', 'fa-laptop');
                            } else {
                                myButton_w.classList.replace('fa-laptop', 'fa-check');
                            }


                    })
                    .catch((error) => {
                        console.error('실패 ', error)
                    })
        }
    </script>
</section>
{{>layouts/footer}}